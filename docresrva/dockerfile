# Use the official Node.js image
FROM node:20.8.0

# Set the working directory inside the container
WORKDIR /app

# Define build arguments for all the environment variables
ARG JWT_SECRET
ARG NEXT_PUBLIC_AWS_ACCESS_KEY_ID
ARG NEXT_PUBLIC_AWS_SECRET_ACCESS_KEY
ARG AWS_REGION
ARG S3_BUCKET_NAME
ARG NEXT_PUBLIC_USER_BACKEND_URL
ARG NEXT_PUBLIC_DOCTOR_BACKEND_URL
ARG NEXT_PUBLIC_ADMIN_BACKEND_URL
ARG NEXT_PUBLIC_BOOKING_BACKEND_URL
ARG NEXT_PUBLIC_SOCKET_URL
ARG PROJECTiD
ARG NEXT_PUBLIC_API_KEY
ARG CLINTID
ARG SECRET

# Set environment variables using the build arguments
ENV JWT_SECRET=$JWT_SECRET
ENV NEXT_PUBLIC_AWS_ACCESS_KEY_ID=$NEXT_PUBLIC_AWS_ACCESS_KEY_ID
ENV NEXT_PUBLIC_AWS_SECRET_ACCESS_KEY=$NEXT_PUBLIC_AWS_SECRET_ACCESS_KEY
ENV AWS_REGION=$AWS_REGION
ENV S3_BUCKET_NAME=$S3_BUCKET_NAME
ENV NEXT_PUBLIC_USER_BACKEND_URL=$NEXT_PUBLIC_USER_BACKEND_URL
ENV NEXT_PUBLIC_DOCTOR_BACKEND_URL=$NEXT_PUBLIC_DOCTOR_BACKEND_URL
ENV NEXT_PUBLIC_ADMIN_BACKEND_URL=$NEXT_PUBLIC_ADMIN_BACKEND_URL
ENV NEXT_PUBLIC_BOOKING_BACKEND_URL=$NEXT_PUBLIC_BOOKING_BACKEND_URL
ENV NEXT_PUBLIC_SOCKET_URL=$NEXT_PUBLIC_SOCKET_URL
ENV PROJECTiD=$PROJECTiD
ENV NEXT_PUBLIC_API_KEY=$NEXT_PUBLIC_API_KEY
ENV CLINTID=$CLINTID
ENV SECRET=$SECRET

# Copy package.json and package-lock.json to the working directory
COPY package*.json ./

# Install dependencies
RUN npm install --legacy-peer-deps

# Copy the rest of the application code
COPY . .

# Build the application (if necessary)
RUN npm run build

# Expose the port the application will run on
EXPOSE 3000

# Start the application in production mode
CMD ["npm", "start"]
